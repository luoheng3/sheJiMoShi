/*
Created by 14486 on 2019/8/30.
 */
// 斐波那契数列 1 1 2 3 5 8 前面两项加起来就是第三项的值;
function fn(n) {
    if(n ==1 || n==2){
        return 1;  // 归
    }
    return fn(n-1)+fn(n-2);  // 递
}
// O(2的n次方);  比平方大比立方小 不推荐 换个方式写
// 推荐使用
function f(n) {
    let n1 = 1;
    let n2 = 1;
    let n3 = 0;
    if( n===1 || n===2){
        return 1;
    }else{
        for (var i = 3; i <= n; i++) {
            n3 = n1 + n2; // 将n3作为当前的值
            n1 = n2;  // 每次执行完毕 更新 n1 n2的值
            n2 = n3; //  以便下一次的执行;
        }
    }
    return n3;
}
// O(n);

/*
百钱白鸡问题 100元钱 要买100只鸡
    公鸡 5 母鸡 3  3小鸡 1文  每种鸡都要有
    问题: 有多少种买法
*/
// 以前的 100*100*100 次  三次for循环
// 现在的优化
function f1() {
    for (var i = 1; i < 20; i++) { // 公鸡
        for (var j = 1; j < 33; j++) { // 母鸡
            if( (i*5+j*3+(100-i-j)/3) === 100 ){
                console.log(i,j,100-j-i);
            }
        }
    }
}
f1();
// O(n²)
/*
再次优化
    5*i + 3*j + k/3 = 100; 乘以3得到④;
    i + j + k = 100; ②
    => 15*i + 9*j + k = 300; ④
    => ④-②  14*i + 8*j = 200;
    => 7*i + 4*j = 100;
    => j = 25-7*i/4
    => z = i/4  用z代替
    => i = 4z; < 100 => z < 25
    => j = 25 - 7z>=1;  => z <= 3;
    => k = 100 - i - j;
*/
function f2() {
    let i,j,k;
    for (var z = 1; z <= 3; z++) { // 公鸡
        i = 4*z;
        j = 25 - 7*z;
        k = 100 - i - j;
        if ((i*5 + j*3 + k/3) === 100) {
            console.log(i, j, k);
        }
    }
}
f2();
